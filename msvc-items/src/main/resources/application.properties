spring.application.name=msvc-items
server.port=9001

#con esta propiedad se indica que se va a usar el servicio de discovery simple
#balanceador de carga de diferentes instancias de un microservicio en local
#pero usando eureka se puede balancear de manera automatica
#spring.cloud.discovery.client.simple.instances.msvc-products[0].uri=http://localhost:9000
#spring.cloud.discovery.client.simple.instances.msvc-products[1].uri=http://localhost:9002

#configuracion personalizada para baseurl
msvc-products.baseurl=http://msvc-products
#eureka
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#eureka docker
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka


management.tracing.sampling.probability=1.0

#configuracion conexion zipkin en docker
management.zipkin.tracing.endpoint=http://zipkin-server:9411/api/v2/spans

#configuracion alternativa circuit breaker en application.properties
#resilience4j.circuitbreaker.configs.defecto.sliding-window-size=6
#resilience4j.circuitbreaker.configs.defecto.failure-rate-threshold=50
#resilience4j.circuitbreaker.configs.defecto.wait-duration-in-open-state=20s
#resilience4j.circuitbreaker.configs.defecto.permitted-number-of-calls-in-half-open-state=4
#resilience4j.circuitbreaker.configs.defecto.slow-call-rate-threshold=50
#resilience4j.circuitbreaker.configs.defecto.slow-call-duration-threshold=2s
#resilience4j.circuitbreaker.instances.items.base-config=defecto
# 
#resilience4j.timelimiter.configs.defecto.timeout-duration=2s
#resilience4j.timelimiter.instances.items.base-config=defecto
